CMAKE_MINIMUM_REQUIRED(VERSION 3.0.00)
ENABLE_TESTING()
PROJECT()

# Project Info
SET(APPLICATION_NAME "projet name")
SET(APPLICATION_CODENAME "${PROJECT_NAME}")
SET(APPLICATION_COPYRIGHT_YEARS "2017")
SET(APPLICATION_VERSION_MAJOR 0)
SET(APPLICATION_VERSION_MINOR 1)
SET(APPLICATION_VERSION_PATCH 0)
SET(APPLICATION_VERSION_TYPE SNAPSHOT)
SET(APPLICATION_VERSION_STRING "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}.${APPLICATION_VERSION_PATCH}-${APPLICATION_VERSION_TYPE}")
SET(APPLICATION_VENDOR_ID "")
SET(APPLICATION_VENDOR_NAME "")
SET(APPLICATION_VENDOR_URL "")
SET(APPLICATION_ID "${APPLICATION_VENDOR_ID}.${PROJECT_NAME}")

## Project Output Paths
SET(MAINFOLDER ${PROJECT_SOURCE_DIR})

## Project Search Paths
LIST(APPEND CMAKE_PREFIX_PATH "${MAINFOLDER}")
LIST(APPEND CMAKE_PREFIX_PATH "${MAINFOLDER}/tools")
LIST(APPEND CMAKE_PREFIX_PATH "${MAINFOLDER}/thirdparty")
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${MAINFOLDER}/tools/cmake")
INCLUDE_DIRECTORIES("${MAINFOLDER}/include")
include(functions)
include(options)

## Use 0 for debugging, 1 for release
SET(CMAKE_VERBOSE_MAKEFILE 0)
set(CMAKE_EXPORT_COMPILE_COMMANDS 1)

## Add Code Coverage Target for Supported Compilers
IF( ( CMAKE_CXX_COMPILER_ID MATCHES "Clang" OR
    CMAKE_CXX_COMPILER_ID MATCHES "GNU") AND
    NOT WIN32 )
    INCLUDE(CodeCoverage)
    SET(GCOV_LIBRARY gcov)
ENDIF()

## Configure Files
FILE(GLOB_RECURSE CONFIGINPUTS1 include/*.h.in.cmake)
FILE(GLOB_RECURSE CONFIGINPUTS2 src/*.h.in.cmake)
LIST(APPEND CONFIGINPUTS "${CONFIGINPUTS1}")
LIST(APPEND CONFIGINPUTS "${CONFIGINPUTS2}")
FOREACH(CONFIGINPUT ${CONFIGINPUTS})
  STRING(REPLACE ".h.in.cmake" ".h" CONFIGOUTPUT1 "${CONFIGINPUT}")
        CONFIGURE_FILE("${CONFIGINPUT}" "${CONFIGOUTPUT1}")
ENDFOREACH(CONFIGINPUT ${CONFIGINPUTS})


## Project Dependencies
FIND_PACKAGE(Boost 1.57 COMPONENTS "system"  REQUIRED)
INCLUDE_DIRECTORIES(${Boost_INCLUDE_DIRS})
LINK_DIRECTORIES(${Boost_LIBRARY_DIRS})

## Project Sources
FILE(GLOB_RECURSE PROJECT_SRCS ${MAINFOLDER}/src/*.cpp ${MAINFOLDER}/src/*.h)
FILE(GLOB_RECURSE TEST_SRCS ${MAINFOLDER}/tests/*.cpp ${MAINFOLDER}/tests/*.h)

add_definitions(-D_VARIADIC_MAX=10)
add_subdirectory(docs)
add_subdirectory(thirdparty)
add_subdirectory(tools/logs_helper)
add_subdirectory(src)
add_subdirectory(tests)
